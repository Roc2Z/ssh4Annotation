<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:p="http://www.springframework.org/schema/p" 
		xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation="
			http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    		http://www.springframework.org/schema/context 
    		http://www.springframework.org/schema/context/spring-context-4.0.xsd 
    		http://www.springframework.org/schema/aop 
    		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
    		http://www.springframework.org/schema/tx 
    		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
			
		<!-- 扫描包含注解信息的包 -->	
		<context:component-scan base-package="com"></context:component-scan>	
		
		<!-- 自动加载属性配置文件 -->
		<context:property-placeholder location="classpath:jdbc.properties" />
		
		<!-- DataSource注入到SessionFactroy注入到DAO注入到Biz注入到Action -->
    	<!-- 1.配置数据源:dataSource -->
    	
    	<!-- 配置数据源：方法一，使用C3P0方式（推荐） -->
		<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
	    	<property name="driverClass" value="${jdbc.driverClassName}"></property>
	    	<property name="jdbcUrl" value="${jdbc.url}"></property>
	    	<property name="user" value="${jdbc.username}"></property>
	    	<property name="password" value="${jdbc.password}"></property>
	    	<!-- 指定连接数据库连接池的最小连接数 -->
			<property name="minPoolSize" value="${c3p0.minPoolSize}" />
			<!-- 指定连接数据库连接池的最大连接数 -->
			<property name="maxPoolSize" value="${c3p0.maxPoolSize}" />
			<!-- 指定连接数据库连接池的连接的最大空闲时间 -->
			<property name="maxIdleTime" value="${c3p0.maxIdleTime}" />
			<property name="acquireIncrement" value="${c3p0.acquireIncrement}" />
		    <property name="maxStatements" value="${c3p0.maxStatements}" />
			<!-- 指定连接数据库连接池的初始化连接数 -->
			<property name="initialPoolSize" value="${c3p0.initialPoolSize}" />
			<property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}" />
			<property name="acquireRetryAttempts" value="${c3p0.acquireRetryAttempts}" />
			<property name="breakAfterAcquireFailure" value="${c3p0.breakAfterAcquireFailure}" />
			<property name="testConnectionOnCheckout" value="${c3p0.testConnectionOnCheckout}" />
		</bean>
		
    	<!-- 配置数据源：方法二，使用DBCP方式（不推荐） -->
    	<!--
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	    	<property name="driverClassName" value="${jdbc.driverClassName}"></property>
	    	<property name="url" value="${jdbc.url}"></property>
	    	<property name="username" value="${jdbc.username}"></property>
	    	<property name="password" value="${jdbc.password}"></property>
		</bean>
		-->
		
		 <!-- 2.配置SessionFactory,并将dataSource注入 -->
	    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
	    	<!-- 注入数据源 -->
	    	<property name="dataSource" ref="dataSource"></property>
	  		<!-- 引入映射文件 -->
	  		<property name="packagesToScan" value="com.qijiabin.entity">
	  		</property>
	  		<!-- hibernate属性 -->
	  		<property name="hibernateProperties">
	  			<props>
	  				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
	  				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
	  				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
	  				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
	  				<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
					<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
					
					<!-- 配置二级缓存 -->
					<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
					<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
					<!-- Hibernate4，这里和Hibernate3不一样，要特别注意！！！ -->
					<prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop>
					<!-- Hibernate3 -->
					<!-- <prop name="hibernate.cache.provider_class">${hibernate.cache.region.factory_class}</prop> -->
					<prop key="hibernate.cache.provider_configuration_file_resource_path">/${hibernate.cache.provider_configuration_file_resource_path}</prop>
	  			</props>
	  		</property>
	    </bean>
	    
	    <!-- 配置spring声明式事务 -->
	    <!-- 配置事务管理器 -->
	    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
	    	<!-- 注入sessionFactory -->
	    	<property name="sessionFactory" ref="sessionFactory"></property>
	    </bean>
	    <tx:annotation-driven transaction-manager="transactionManager"/>
    
</beans>
